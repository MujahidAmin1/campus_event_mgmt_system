import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:campus_event_mgmt_system/core/providers.dart';
import 'package:campus_event_mgmt_system/features/auth/view/auth_screen.dart';
import 'package:campus_event_mgmt_system/features/events/view/events_screen.dart';
import 'package:campus_event_mgmt_system/features/events/view/admin_events_screen.dart';
import 'package:campus_event_mgmt_system/core/widgets/loading_screen.dart';
import 'firebase_options.dart'; // Generated by FlutterFire CLI

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );

  runApp(const ProviderScope(child: MyApp()));
}

class MyApp extends ConsumerWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    final authState = ref.watch(authStateProvider);

    return MaterialApp(
      title: 'Campus Event Management',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.blue),
        useMaterial3: true,
      ),
      home: authState.when(
        data: (user) {
          if (user == null) {
            return const AuthScreen();
          }

          final role = ref.read(userRoleProvider);
          return role == UserRole.admin ? const AdminEventsScreen() : const EventsScreen();
        },
        loading: () => const LoadingScreen(
          message: 'Checking authentication...',
          subtitle: 'Please wait',
        ),
        error: (error, _) => Scaffold(
          body: Center(child: Text('Error: $error')),
        ),
      ),
    );
  }
}

/// Stream provider for FirebaseAuth user
final authStateProvider = StreamProvider<User?>((ref) {
  return FirebaseAuth.instance.authStateChanges();
});
